#!/bin/sh

# Script to build libmad for macOS (both ARM64 and x86_64)
# Usage: ./mk-libmad-macos [-x86]
#   -x86: Build for Intel x86_64 architecture (default is ARM64/Apple Silicon)

# Default settings
ARCH="arm64"

# Parse command line arguments
for arg in "$@"; do
    case "$arg" in
        -x86)
            ARCH="x86_64"
            ;;
        *)
            echo "Unknown option: $arg"
            echo "Usage: ./mk-libmad-macos [-x86]"
            exit 1
            ;;
    esac
done

# Set architecture-specific flags
if [ "$ARCH" = "arm64" ]; then
    CFLAGS="-arch arm64 -mmacosx-version-min=11.0"
    LIB_SUFFIX="arm64"
    echo "Building libmad for Apple Silicon (ARM64)"
else
    CFLAGS="-arch x86_64 -mmacosx-version-min=10.9"
    LIB_SUFFIX="intel64"
    echo "Building libmad for Intel (x86_64)"
fi

# Create libs directory if it doesn't exist
mkdir -p libs

# Download and extract libmad if not already present
if [ ! -d "libmad-0.15.1b" ]; then
    echo "Downloading libmad-0.15.1b..."
    curl -L https://downloads.sourceforge.net/project/mad/libmad/0.15.1b/libmad-0.15.1b.tar.gz -o libmad-0.15.1b.tar.gz
    tar -xzf libmad-0.15.1b.tar.gz
    rm libmad-0.15.1b.tar.gz
fi

# Apply necessary patches for macOS
cd libmad-0.15.1b
if [ ! -f "patched" ]; then
    echo "Applying patches for macOS..."
    
    # Fix for "error: can't find a register in class 'GENERAL_REGS'"
    sed -i.bak -e 's/-fforce-mem//' configure
    
    # Fix for "non-relocatable code" on x86_64
    cat > mad.h.patch << 'EOF'
--- mad.h.orig	2013-06-17 03:03:31.000000000 +0200
+++ mad.h	2013-06-17 03:04:19.000000000 +0200
@@ -343,6 +343,13 @@
 # endif
 #elif defined(FPM_64BIT)
 
+/* x86-64 has 64-bit long, but long long works better for cross-platform
+   compatibility */
+# if defined(__x86_64__)
+typedef long long mad_fixed_t;
+typedef long long mad_fixed64hi_t;
+typedef unsigned long long mad_fixed64lo_t;
+# else
 typedef long mad_fixed_t;
 typedef long mad_fixed64hi_t;
 typedef unsigned long mad_fixed64lo_t;
@@ -351,6 +358,7 @@
 typedef mad_fixed_t mad_fixed64hi_t;
 typedef unsigned long mad_fixed64lo_t;
 # endif
+# endif
 
 #else
 
EOF
    patch -p0 < mad.h.patch
    
    touch patched
fi

# Configure and build
echo "Configuring libmad..."
CFLAGS="$CFLAGS" ./configure --disable-shared --enable-static --prefix=/tmp/libmad

echo "Building libmad..."
make clean
make -j4

echo "Installing libmad to temporary location..."
make install

echo "Copying libmad.a to libs directory..."
cp /tmp/libmad/lib/libmad.a ../libs/macos-$LIB_SUFFIX-libmad.a

echo "Cleaning up..."
cd ..

echo "Build complete! Library created: libs/macos-$LIB_SUFFIX-libmad.a" 